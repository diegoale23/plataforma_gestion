-- Table: public.auth_group

-- DROP TABLE IF EXISTS public.auth_group;

CREATE TABLE IF NOT EXISTS public.auth_group
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(150) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT auth_group_pkey PRIMARY KEY (id),
    CONSTRAINT auth_group_name_key UNIQUE (name)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.auth_group
    OWNER to postgres;
-- Index: auth_group_name_a6ea08ec_like

-- DROP INDEX IF EXISTS public.auth_group_name_a6ea08ec_like;

CREATE INDEX IF NOT EXISTS auth_group_name_a6ea08ec_like
    ON public.auth_group USING btree
    (name COLLATE pg_catalog."default" varchar_pattern_ops ASC NULLS LAST)
    TABLESPACE pg_default;
	
-- Table: public.auth_group_permissions

-- DROP TABLE IF EXISTS public.auth_group_permissions;

CREATE TABLE IF NOT EXISTS public.auth_group_permissions
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    group_id integer NOT NULL,
    permission_id integer NOT NULL,
    CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id),
    CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id),
    CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id)
        REFERENCES public.auth_permission (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        DEFERRABLE INITIALLY DEFERRED,
    CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id)
        REFERENCES public.auth_group (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        DEFERRABLE INITIALLY DEFERRED
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.auth_group_permissions
    OWNER to postgres;
-- Index: auth_group_permissions_group_id_b120cbf9

-- DROP INDEX IF EXISTS public.auth_group_permissions_group_id_b120cbf9;

CREATE INDEX IF NOT EXISTS auth_group_permissions_group_id_b120cbf9
    ON public.auth_group_permissions USING btree
    (group_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: auth_group_permissions_permission_id_84c5c92e

-- DROP INDEX IF EXISTS public.auth_group_permissions_permission_id_84c5c92e;

CREATE INDEX IF NOT EXISTS auth_group_permissions_permission_id_84c5c92e
    ON public.auth_group_permissions USING btree
    (permission_id ASC NULLS LAST)
    TABLESPACE pg_default;
	
-- Table: public.auth_permission

-- DROP TABLE IF EXISTS public.auth_permission;

CREATE TABLE IF NOT EXISTS public.auth_permission
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT auth_permission_pkey PRIMARY KEY (id),
    CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename),
    CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id)
        REFERENCES public.django_content_type (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        DEFERRABLE INITIALLY DEFERRED
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.auth_permission
    OWNER to postgres;
-- Index: auth_permission_content_type_id_2f476e4b

-- DROP INDEX IF EXISTS public.auth_permission_content_type_id_2f476e4b;

CREATE INDEX IF NOT EXISTS auth_permission_content_type_id_2f476e4b
    ON public.auth_permission USING btree
    (content_type_id ASC NULLS LAST)
    TABLESPACE pg_default;
	
-- Table: public.auth_user

-- DROP TABLE IF EXISTS public.auth_user;

CREATE TABLE IF NOT EXISTS public.auth_user
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    password character varying(128) COLLATE pg_catalog."default" NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) COLLATE pg_catalog."default" NOT NULL,
    first_name character varying(150) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(150) COLLATE pg_catalog."default" NOT NULL,
    email character varying(254) COLLATE pg_catalog."default" NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL,
    CONSTRAINT auth_user_pkey PRIMARY KEY (id),
    CONSTRAINT auth_user_username_key UNIQUE (username)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.auth_user
    OWNER to postgres;
-- Index: auth_user_username_6821ab7c_like

-- DROP INDEX IF EXISTS public.auth_user_username_6821ab7c_like;

CREATE INDEX IF NOT EXISTS auth_user_username_6821ab7c_like
    ON public.auth_user USING btree
    (username COLLATE pg_catalog."default" varchar_pattern_ops ASC NULLS LAST)
    TABLESPACE pg_default;
	
-- Table: public.auth_user_groups

-- DROP TABLE IF EXISTS public.auth_user_groups;

CREATE TABLE IF NOT EXISTS public.auth_user_groups
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    user_id integer NOT NULL,
    group_id integer NOT NULL,
    CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id),
    CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id),
    CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id)
        REFERENCES public.auth_group (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        DEFERRABLE INITIALLY DEFERRED,
    CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id)
        REFERENCES public.auth_user (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        DEFERRABLE INITIALLY DEFERRED
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.auth_user_groups
    OWNER to postgres;
-- Index: auth_user_groups_group_id_97559544

-- DROP INDEX IF EXISTS public.auth_user_groups_group_id_97559544;

CREATE INDEX IF NOT EXISTS auth_user_groups_group_id_97559544
    ON public.auth_user_groups USING btree
    (group_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: auth_user_groups_user_id_6a12ed8b

-- DROP INDEX IF EXISTS public.auth_user_groups_user_id_6a12ed8b;

CREATE INDEX IF NOT EXISTS auth_user_groups_user_id_6a12ed8b
    ON public.auth_user_groups USING btree
    (user_id ASC NULLS LAST)
    TABLESPACE pg_default;
	
-- Table: public.auth_user_user_permissions

-- DROP TABLE IF EXISTS public.auth_user_user_permissions;

CREATE TABLE IF NOT EXISTS public.auth_user_user_permissions
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    user_id integer NOT NULL,
    permission_id integer NOT NULL,
    CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id),
    CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id),
    CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id)
        REFERENCES public.auth_permission (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        DEFERRABLE INITIALLY DEFERRED,
    CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id)
        REFERENCES public.auth_user (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        DEFERRABLE INITIALLY DEFERRED
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.auth_user_user_permissions
    OWNER to postgres;
-- Index: auth_user_user_permissions_permission_id_1fbb5f2c

-- DROP INDEX IF EXISTS public.auth_user_user_permissions_permission_id_1fbb5f2c;

CREATE INDEX IF NOT EXISTS auth_user_user_permissions_permission_id_1fbb5f2c
    ON public.auth_user_user_permissions USING btree
    (permission_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: auth_user_user_permissions_user_id_a95ead1b

-- DROP INDEX IF EXISTS public.auth_user_user_permissions_user_id_a95ead1b;

CREATE INDEX IF NOT EXISTS auth_user_user_permissions_user_id_a95ead1b
    ON public.auth_user_user_permissions USING btree
    (user_id ASC NULLS LAST)
    TABLESPACE pg_default;
	
-- Table: public.django_admin_log

-- DROP TABLE IF EXISTS public.django_admin_log;

CREATE TABLE IF NOT EXISTS public.django_admin_log
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    action_time timestamp with time zone NOT NULL,
    object_id text COLLATE pg_catalog."default",
    object_repr character varying(200) COLLATE pg_catalog."default" NOT NULL,
    action_flag smallint NOT NULL,
    change_message text COLLATE pg_catalog."default" NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_pkey PRIMARY KEY (id),
    CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id)
        REFERENCES public.django_content_type (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        DEFERRABLE INITIALLY DEFERRED,
    CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id)
        REFERENCES public.auth_user (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        DEFERRABLE INITIALLY DEFERRED,
    CONSTRAINT django_admin_log_action_flag_check CHECK (action_flag >= 0)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.django_admin_log
    OWNER to postgres;
-- Index: django_admin_log_content_type_id_c4bce8eb

-- DROP INDEX IF EXISTS public.django_admin_log_content_type_id_c4bce8eb;

CREATE INDEX IF NOT EXISTS django_admin_log_content_type_id_c4bce8eb
    ON public.django_admin_log USING btree
    (content_type_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: django_admin_log_user_id_c564eba6

-- DROP INDEX IF EXISTS public.django_admin_log_user_id_c564eba6;

CREATE INDEX IF NOT EXISTS django_admin_log_user_id_c564eba6
    ON public.django_admin_log USING btree
    (user_id ASC NULLS LAST)
    TABLESPACE pg_default;
	
-- Table: public.django_content_type

-- DROP TABLE IF EXISTS public.django_content_type;

CREATE TABLE IF NOT EXISTS public.django_content_type
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    app_label character varying(100) COLLATE pg_catalog."default" NOT NULL,
    model character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT django_content_type_pkey PRIMARY KEY (id),
    CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.django_content_type
    OWNER to postgres;
	
-- Table: public.django_migrations

-- DROP TABLE IF EXISTS public.django_migrations;

CREATE TABLE IF NOT EXISTS public.django_migrations
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    app character varying(255) COLLATE pg_catalog."default" NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    applied timestamp with time zone NOT NULL,
    CONSTRAINT django_migrations_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.django_migrations
    OWNER to postgres;
	
-- Table: public.django_session

-- DROP TABLE IF EXISTS public.django_session;

CREATE TABLE IF NOT EXISTS public.django_session
(
    session_key character varying(40) COLLATE pg_catalog."default" NOT NULL,
    session_data text COLLATE pg_catalog."default" NOT NULL,
    expire_date timestamp with time zone NOT NULL,
    CONSTRAINT django_session_pkey PRIMARY KEY (session_key)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.django_session
    OWNER to postgres;
-- Index: django_session_expire_date_a5c62663

-- DROP INDEX IF EXISTS public.django_session_expire_date_a5c62663;

CREATE INDEX IF NOT EXISTS django_session_expire_date_a5c62663
    ON public.django_session USING btree
    (expire_date ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: django_session_session_key_c0390e0f_like

-- DROP INDEX IF EXISTS public.django_session_session_key_c0390e0f_like;

CREATE INDEX IF NOT EXISTS django_session_session_key_c0390e0f_like
    ON public.django_session USING btree
    (session_key COLLATE pg_catalog."default" varchar_pattern_ops ASC NULLS LAST)
    TABLESPACE pg_default;
	
-- Table: public.market_analysis_joboffer

-- DROP TABLE IF EXISTS public.market_analysis_joboffer;

CREATE TABLE IF NOT EXISTS public.market_analysis_joboffer
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    title character varying(255) COLLATE pg_catalog."default" NOT NULL,
    company character varying(255) COLLATE pg_catalog."default",
    location character varying(255) COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default" NOT NULL,
    salary_range character varying(255) COLLATE pg_catalog."default",
    publication_date date,
    url character varying(500) COLLATE pg_catalog."default" NOT NULL,
    applicants_count integer,
    raw_data jsonb,
    scraped_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    is_active boolean NOT NULL,
    source_id bigint,
    industry character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT market_analysis_joboffer_pkey PRIMARY KEY (id),
    CONSTRAINT market_analysis_joboffer_url_key UNIQUE (url),
    CONSTRAINT market_analysis_jobo_source_id_b5367097_fk_market_an FOREIGN KEY (source_id)
        REFERENCES public.market_analysis_jobsource (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        DEFERRABLE INITIALLY DEFERRED
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.market_analysis_joboffer
    OWNER to postgres;
-- Index: market_anal_locatio_53c46e_idx

-- DROP INDEX IF EXISTS public.market_anal_locatio_53c46e_idx;

CREATE INDEX IF NOT EXISTS market_anal_locatio_53c46e_idx
    ON public.market_analysis_joboffer USING btree
    (location COLLATE pg_catalog."default" ASC NULLS LAST, company COLLATE pg_catalog."default" ASC NULLS LAST, industry COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: market_anal_publica_231d39_idx

-- DROP INDEX IF EXISTS public.market_anal_publica_231d39_idx;

CREATE INDEX IF NOT EXISTS market_anal_publica_231d39_idx
    ON public.market_analysis_joboffer USING btree
    (publication_date DESC NULLS FIRST, scraped_at DESC NULLS FIRST)
    TABLESPACE pg_default;
-- Index: market_analysis_joboffer_company_2fc9ebce

-- DROP INDEX IF EXISTS public.market_analysis_joboffer_company_2fc9ebce;

CREATE INDEX IF NOT EXISTS market_analysis_joboffer_company_2fc9ebce
    ON public.market_analysis_joboffer USING btree
    (company COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: market_analysis_joboffer_company_2fc9ebce_like

-- DROP INDEX IF EXISTS public.market_analysis_joboffer_company_2fc9ebce_like;

CREATE INDEX IF NOT EXISTS market_analysis_joboffer_company_2fc9ebce_like
    ON public.market_analysis_joboffer USING btree
    (company COLLATE pg_catalog."default" varchar_pattern_ops ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: market_analysis_joboffer_industry_66611455

-- DROP INDEX IF EXISTS public.market_analysis_joboffer_industry_66611455;

CREATE INDEX IF NOT EXISTS market_analysis_joboffer_industry_66611455
    ON public.market_analysis_joboffer USING btree
    (industry COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: market_analysis_joboffer_industry_66611455_like

-- DROP INDEX IF EXISTS public.market_analysis_joboffer_industry_66611455_like;

CREATE INDEX IF NOT EXISTS market_analysis_joboffer_industry_66611455_like
    ON public.market_analysis_joboffer USING btree
    (industry COLLATE pg_catalog."default" varchar_pattern_ops ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: market_analysis_joboffer_location_b184a2ee

-- DROP INDEX IF EXISTS public.market_analysis_joboffer_location_b184a2ee;

CREATE INDEX IF NOT EXISTS market_analysis_joboffer_location_b184a2ee
    ON public.market_analysis_joboffer USING btree
    (location COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: market_analysis_joboffer_location_b184a2ee_like

-- DROP INDEX IF EXISTS public.market_analysis_joboffer_location_b184a2ee_like;

CREATE INDEX IF NOT EXISTS market_analysis_joboffer_location_b184a2ee_like
    ON public.market_analysis_joboffer USING btree
    (location COLLATE pg_catalog."default" varchar_pattern_ops ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: market_analysis_joboffer_publication_date_d4eb2881

-- DROP INDEX IF EXISTS public.market_analysis_joboffer_publication_date_d4eb2881;

CREATE INDEX IF NOT EXISTS market_analysis_joboffer_publication_date_d4eb2881
    ON public.market_analysis_joboffer USING btree
    (publication_date ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: market_analysis_joboffer_source_id_b5367097

-- DROP INDEX IF EXISTS public.market_analysis_joboffer_source_id_b5367097;

CREATE INDEX IF NOT EXISTS market_analysis_joboffer_source_id_b5367097
    ON public.market_analysis_joboffer USING btree
    (source_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: market_analysis_joboffer_title_54009992

-- DROP INDEX IF EXISTS public.market_analysis_joboffer_title_54009992;

CREATE INDEX IF NOT EXISTS market_analysis_joboffer_title_54009992
    ON public.market_analysis_joboffer USING btree
    (title COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: market_analysis_joboffer_title_54009992_like

-- DROP INDEX IF EXISTS public.market_analysis_joboffer_title_54009992_like;

CREATE INDEX IF NOT EXISTS market_analysis_joboffer_title_54009992_like
    ON public.market_analysis_joboffer USING btree
    (title COLLATE pg_catalog."default" varchar_pattern_ops ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: market_analysis_joboffer_url_437d7610_like

-- DROP INDEX IF EXISTS public.market_analysis_joboffer_url_437d7610_like;

CREATE INDEX IF NOT EXISTS market_analysis_joboffer_url_437d7610_like
    ON public.market_analysis_joboffer USING btree
    (url COLLATE pg_catalog."default" varchar_pattern_ops ASC NULLS LAST)
    TABLESPACE pg_default;
	
-- Table: public.market_analysis_joboffer_required_skills

-- DROP TABLE IF EXISTS public.market_analysis_joboffer_required_skills;

CREATE TABLE IF NOT EXISTS public.market_analysis_joboffer_required_skills
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    joboffer_id bigint NOT NULL,
    skill_id bigint NOT NULL,
    CONSTRAINT market_analysis_joboffer_required_skills_pkey PRIMARY KEY (id),
    CONSTRAINT market_analysis_joboffer_joboffer_id_skill_id_b8b6ea40_uniq UNIQUE (joboffer_id, skill_id),
    CONSTRAINT market_analysis_jobo_joboffer_id_bbf7f545_fk_market_an FOREIGN KEY (joboffer_id)
        REFERENCES public.market_analysis_joboffer (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        DEFERRABLE INITIALLY DEFERRED,
    CONSTRAINT market_analysis_jobo_skill_id_1d76f900_fk_users_ski FOREIGN KEY (skill_id)
        REFERENCES public.users_skill (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        DEFERRABLE INITIALLY DEFERRED
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.market_analysis_joboffer_required_skills
    OWNER to postgres;
-- Index: market_analysis_joboffer_required_skills_joboffer_id_bbf7f545

-- DROP INDEX IF EXISTS public.market_analysis_joboffer_required_skills_joboffer_id_bbf7f545;

CREATE INDEX IF NOT EXISTS market_analysis_joboffer_required_skills_joboffer_id_bbf7f545
    ON public.market_analysis_joboffer_required_skills USING btree
    (joboffer_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: market_analysis_joboffer_required_skills_skill_id_1d76f900

-- DROP INDEX IF EXISTS public.market_analysis_joboffer_required_skills_skill_id_1d76f900;

CREATE INDEX IF NOT EXISTS market_analysis_joboffer_required_skills_skill_id_1d76f900
    ON public.market_analysis_joboffer_required_skills USING btree
    (skill_id ASC NULLS LAST)
    TABLESPACE pg_default;
	
-- Table: public.market_analysis_jobsource

-- DROP TABLE IF EXISTS public.market_analysis_jobsource;

CREATE TABLE IF NOT EXISTS public.market_analysis_jobsource
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    url character varying(200) COLLATE pg_catalog."default",
    last_scraped timestamp with time zone,
    CONSTRAINT market_analysis_jobsource_pkey PRIMARY KEY (id),
    CONSTRAINT market_analysis_jobsource_name_key UNIQUE (name)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.market_analysis_jobsource
    OWNER to postgres;
-- Index: market_analysis_jobsource_name_b41347dc_like

-- DROP INDEX IF EXISTS public.market_analysis_jobsource_name_b41347dc_like;

CREATE INDEX IF NOT EXISTS market_analysis_jobsource_name_b41347dc_like
    ON public.market_analysis_jobsource USING btree
    (name COLLATE pg_catalog."default" varchar_pattern_ops ASC NULLS LAST)
    TABLESPACE pg_default;
	
-- Table: public.market_analysis_markettrend

-- DROP TABLE IF EXISTS public.market_analysis_markettrend;

CREATE TABLE IF NOT EXISTS public.market_analysis_markettrend
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    analysis_date date NOT NULL,
    period character varying(50) COLLATE pg_catalog."default" NOT NULL,
    region character varying(100) COLLATE pg_catalog."default",
    industry character varying(100) COLLATE pg_catalog."default",
    skill_trends jsonb NOT NULL,
    source_description character varying(255) COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone NOT NULL,
    CONSTRAINT market_analysis_markettrend_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.market_analysis_markettrend
    OWNER to postgres;
-- Index: market_analysis_markettrend_analysis_date_e0c2263c

-- DROP INDEX IF EXISTS public.market_analysis_markettrend_analysis_date_e0c2263c;

CREATE INDEX IF NOT EXISTS market_analysis_markettrend_analysis_date_e0c2263c
    ON public.market_analysis_markettrend USING btree
    (analysis_date ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: market_analysis_markettrend_industry_6c2f5ea7

-- DROP INDEX IF EXISTS public.market_analysis_markettrend_industry_6c2f5ea7;

CREATE INDEX IF NOT EXISTS market_analysis_markettrend_industry_6c2f5ea7
    ON public.market_analysis_markettrend USING btree
    (industry COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: market_analysis_markettrend_industry_6c2f5ea7_like

-- DROP INDEX IF EXISTS public.market_analysis_markettrend_industry_6c2f5ea7_like;

CREATE INDEX IF NOT EXISTS market_analysis_markettrend_industry_6c2f5ea7_like
    ON public.market_analysis_markettrend USING btree
    (industry COLLATE pg_catalog."default" varchar_pattern_ops ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: market_analysis_markettrend_region_7b292fc3

-- DROP INDEX IF EXISTS public.market_analysis_markettrend_region_7b292fc3;

CREATE INDEX IF NOT EXISTS market_analysis_markettrend_region_7b292fc3
    ON public.market_analysis_markettrend USING btree
    (region COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: market_analysis_markettrend_region_7b292fc3_like

-- DROP INDEX IF EXISTS public.market_analysis_markettrend_region_7b292fc3_like;

CREATE INDEX IF NOT EXISTS market_analysis_markettrend_region_7b292fc3_like
    ON public.market_analysis_markettrend USING btree
    (region COLLATE pg_catalog."default" varchar_pattern_ops ASC NULLS LAST)
    TABLESPACE pg_default;
	
-- Table: public.projects_project

-- DROP TABLE IF EXISTS public.projects_project;

CREATE TABLE IF NOT EXISTS public.projects_project
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name character varying(200) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    manager_id integer,
    CONSTRAINT projects_project_pkey PRIMARY KEY (id),
    CONSTRAINT projects_project_manager_id_d3b083b7_fk_auth_user_id FOREIGN KEY (manager_id)
        REFERENCES public.auth_user (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        DEFERRABLE INITIALLY DEFERRED
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.projects_project
    OWNER to postgres;
-- Index: projects_project_manager_id_d3b083b7

-- DROP INDEX IF EXISTS public.projects_project_manager_id_d3b083b7;

CREATE INDEX IF NOT EXISTS projects_project_manager_id_d3b083b7
    ON public.projects_project USING btree
    (manager_id ASC NULLS LAST)
    TABLESPACE pg_default;
	
-- Table: public.projects_task

-- DROP TABLE IF EXISTS public.projects_task;

CREATE TABLE IF NOT EXISTS public.projects_task
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    title character varying(255) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default" NOT NULL,
    status character varying(20) COLLATE pg_catalog."default" NOT NULL,
    priority integer NOT NULL,
    deadline date,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    project_id bigint NOT NULL,
    CONSTRAINT projects_task_pkey PRIMARY KEY (id),
    CONSTRAINT projects_task_project_id_a1b987d6_fk_projects_project_id FOREIGN KEY (project_id)
        REFERENCES public.projects_project (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        DEFERRABLE INITIALLY DEFERRED
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.projects_task
    OWNER to postgres;
-- Index: projects_task_project_id_a1b987d6

-- DROP INDEX IF EXISTS public.projects_task_project_id_a1b987d6;

CREATE INDEX IF NOT EXISTS projects_task_project_id_a1b987d6
    ON public.projects_task USING btree
    (project_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: projects_task_status_d5079ca1

-- DROP INDEX IF EXISTS public.projects_task_status_d5079ca1;

CREATE INDEX IF NOT EXISTS projects_task_status_d5079ca1
    ON public.projects_task USING btree
    (status COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: projects_task_status_d5079ca1_like

-- DROP INDEX IF EXISTS public.projects_task_status_d5079ca1_like;

CREATE INDEX IF NOT EXISTS projects_task_status_d5079ca1_like
    ON public.projects_task USING btree
    (status COLLATE pg_catalog."default" varchar_pattern_ops ASC NULLS LAST)
    TABLESPACE pg_default;
	
-- Table: public.projects_task_assigned_to

-- DROP TABLE IF EXISTS public.projects_task_assigned_to;

CREATE TABLE IF NOT EXISTS public.projects_task_assigned_to
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    task_id bigint NOT NULL,
    user_id integer NOT NULL,
    CONSTRAINT projects_task_assigned_to_pkey PRIMARY KEY (id),
    CONSTRAINT projects_task_assigned_to_task_id_user_id_235a228f_uniq UNIQUE (task_id, user_id),
    CONSTRAINT projects_task_assigned_to_task_id_f0172fcf_fk_projects_task_id FOREIGN KEY (task_id)
        REFERENCES public.projects_task (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        DEFERRABLE INITIALLY DEFERRED,
    CONSTRAINT projects_task_assigned_to_user_id_cf37dfff_fk_auth_user_id FOREIGN KEY (user_id)
        REFERENCES public.auth_user (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        DEFERRABLE INITIALLY DEFERRED
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.projects_task_assigned_to
    OWNER to postgres;
-- Index: projects_task_assigned_to_task_id_f0172fcf

-- DROP INDEX IF EXISTS public.projects_task_assigned_to_task_id_f0172fcf;

CREATE INDEX IF NOT EXISTS projects_task_assigned_to_task_id_f0172fcf
    ON public.projects_task_assigned_to USING btree
    (task_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: projects_task_assigned_to_user_id_cf37dfff

-- DROP INDEX IF EXISTS public.projects_task_assigned_to_user_id_cf37dfff;

CREATE INDEX IF NOT EXISTS projects_task_assigned_to_user_id_cf37dfff
    ON public.projects_task_assigned_to USING btree
    (user_id ASC NULLS LAST)
    TABLESPACE pg_default;
	
-- Table: public.projects_task_required_skills

-- DROP TABLE IF EXISTS public.projects_task_required_skills;

CREATE TABLE IF NOT EXISTS public.projects_task_required_skills
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    task_id bigint NOT NULL,
    skill_id bigint NOT NULL,
    CONSTRAINT projects_task_required_skills_pkey PRIMARY KEY (id),
    CONSTRAINT projects_task_required_skills_task_id_skill_id_6a042048_uniq UNIQUE (task_id, skill_id),
    CONSTRAINT projects_task_requir_skill_id_b9340378_fk_users_ski FOREIGN KEY (skill_id)
        REFERENCES public.users_skill (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        DEFERRABLE INITIALLY DEFERRED,
    CONSTRAINT projects_task_requir_task_id_40e5bb9b_fk_projects_ FOREIGN KEY (task_id)
        REFERENCES public.projects_task (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        DEFERRABLE INITIALLY DEFERRED
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.projects_task_required_skills
    OWNER to postgres;
-- Index: projects_task_required_skills_skill_id_b9340378

-- DROP INDEX IF EXISTS public.projects_task_required_skills_skill_id_b9340378;

CREATE INDEX IF NOT EXISTS projects_task_required_skills_skill_id_b9340378
    ON public.projects_task_required_skills USING btree
    (skill_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: projects_task_required_skills_task_id_40e5bb9b

-- DROP INDEX IF EXISTS public.projects_task_required_skills_task_id_40e5bb9b;

CREATE INDEX IF NOT EXISTS projects_task_required_skills_task_id_40e5bb9b
    ON public.projects_task_required_skills USING btree
    (task_id ASC NULLS LAST)
    TABLESPACE pg_default;
	
-- Table: public.users_role

-- DROP TABLE IF EXISTS public.users_role;

CREATE TABLE IF NOT EXISTS public.users_role
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT users_role_pkey PRIMARY KEY (id),
    CONSTRAINT users_role_name_key UNIQUE (name)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.users_role
    OWNER to postgres;
-- Index: users_role_name_86bbd537_like

-- DROP INDEX IF EXISTS public.users_role_name_86bbd537_like;

CREATE INDEX IF NOT EXISTS users_role_name_86bbd537_like
    ON public.users_role USING btree
    (name COLLATE pg_catalog."default" varchar_pattern_ops ASC NULLS LAST)
    TABLESPACE pg_default;
	
-- Table: public.users_role_permissions

-- DROP TABLE IF EXISTS public.users_role_permissions;

CREATE TABLE IF NOT EXISTS public.users_role_permissions
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    role_id bigint NOT NULL,
    permission_id integer NOT NULL,
    CONSTRAINT users_role_permissions_pkey PRIMARY KEY (id),
    CONSTRAINT users_role_permissions_role_id_permission_id_a9833844_uniq UNIQUE (role_id, permission_id),
    CONSTRAINT users_role_permissio_permission_id_5313a8eb_fk_auth_perm FOREIGN KEY (permission_id)
        REFERENCES public.auth_permission (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        DEFERRABLE INITIALLY DEFERRED,
    CONSTRAINT users_role_permissions_role_id_b99e9f6e_fk_users_role_id FOREIGN KEY (role_id)
        REFERENCES public.users_role (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        DEFERRABLE INITIALLY DEFERRED
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.users_role_permissions
    OWNER to postgres;
-- Index: users_role_permissions_permission_id_5313a8eb

-- DROP INDEX IF EXISTS public.users_role_permissions_permission_id_5313a8eb;

CREATE INDEX IF NOT EXISTS users_role_permissions_permission_id_5313a8eb
    ON public.users_role_permissions USING btree
    (permission_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: users_role_permissions_role_id_b99e9f6e

-- DROP INDEX IF EXISTS public.users_role_permissions_role_id_b99e9f6e;

CREATE INDEX IF NOT EXISTS users_role_permissions_role_id_b99e9f6e
    ON public.users_role_permissions USING btree
    (role_id ASC NULLS LAST)
    TABLESPACE pg_default;
	
-- Table: public.users_skill

-- DROP TABLE IF EXISTS public.users_skill;

CREATE TABLE IF NOT EXISTS public.users_skill
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT users_skill_pkey PRIMARY KEY (id),
    CONSTRAINT users_skill_name_key UNIQUE (name)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.users_skill
    OWNER to postgres;
-- Index: users_skill_name_218d07d0_like

-- DROP INDEX IF EXISTS public.users_skill_name_218d07d0_like;

CREATE INDEX IF NOT EXISTS users_skill_name_218d07d0_like
    ON public.users_skill USING btree
    (name COLLATE pg_catalog."default" varchar_pattern_ops ASC NULLS LAST)
    TABLESPACE pg_default;
	
-- Table: public.users_userprofile

-- DROP TABLE IF EXISTS public.users_userprofile;

CREATE TABLE IF NOT EXISTS public.users_userprofile
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    bio text COLLATE pg_catalog."default",
    role_id bigint,
    user_id integer NOT NULL,
    location character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT users_userprofile_pkey PRIMARY KEY (id),
    CONSTRAINT users_userprofile_user_id_key UNIQUE (user_id),
    CONSTRAINT users_userprofile_role_id_e1b6eebd_fk_users_role_id FOREIGN KEY (role_id)
        REFERENCES public.users_role (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        DEFERRABLE INITIALLY DEFERRED,
    CONSTRAINT users_userprofile_user_id_87251ef1_fk_auth_user_id FOREIGN KEY (user_id)
        REFERENCES public.auth_user (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        DEFERRABLE INITIALLY DEFERRED
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.users_userprofile
    OWNER to postgres;
-- Index: users_userprofile_role_id_e1b6eebd

-- DROP INDEX IF EXISTS public.users_userprofile_role_id_e1b6eebd;

CREATE INDEX IF NOT EXISTS users_userprofile_role_id_e1b6eebd
    ON public.users_userprofile USING btree
    (role_id ASC NULLS LAST)
    TABLESPACE pg_default;
	
-- Table: public.users_userprofile_skills

-- DROP TABLE IF EXISTS public.users_userprofile_skills;

CREATE TABLE IF NOT EXISTS public.users_userprofile_skills
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    userprofile_id bigint NOT NULL,
    skill_id bigint NOT NULL,
    CONSTRAINT users_userprofile_skills_pkey PRIMARY KEY (id),
    CONSTRAINT users_userprofile_skills_userprofile_id_skill_id_901be3ef_uniq UNIQUE (userprofile_id, skill_id),
    CONSTRAINT users_userprofile_sk_userprofile_id_41e38a57_fk_users_use FOREIGN KEY (userprofile_id)
        REFERENCES public.users_userprofile (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        DEFERRABLE INITIALLY DEFERRED,
    CONSTRAINT users_userprofile_skills_skill_id_8e5d093c_fk_users_skill_id FOREIGN KEY (skill_id)
        REFERENCES public.users_skill (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        DEFERRABLE INITIALLY DEFERRED
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.users_userprofile_skills
    OWNER to postgres;
-- Index: users_userprofile_skills_skill_id_8e5d093c

-- DROP INDEX IF EXISTS public.users_userprofile_skills_skill_id_8e5d093c;

CREATE INDEX IF NOT EXISTS users_userprofile_skills_skill_id_8e5d093c
    ON public.users_userprofile_skills USING btree
    (skill_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: users_userprofile_skills_userprofile_id_41e38a57

-- DROP INDEX IF EXISTS public.users_userprofile_skills_userprofile_id_41e38a57;

CREATE INDEX IF NOT EXISTS users_userprofile_skills_userprofile_id_41e38a57
    ON public.users_userprofile_skills USING btree
    (userprofile_id ASC NULLS LAST)
    TABLESPACE pg_default;